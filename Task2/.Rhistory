getwd()
# Load the dataset
german_data <- read.csv("C:/Users/pramod kumar yadav/Desktop/Kim Jong UN Confidentials/Projects/R Projects/Task2/german.data.csv")
# Inspect the structure of the dataset
str(german_data)
# View the first few rows
head(german_data)
# Create the logistic regression model
logistic_model <- glm(Response ~ ., data = german_data, family = binomial(link = "logit"))
german_data <- read.csv(file.choose(), header = FALSE, stringsAsFactors = TRUE)
colnames(german_data) <- c("Status_of_existing_checking_account", "Duration_in_month",
"Credit_history", "Purpose", "Credit_amount", "Savings_account_bond",
"Employment_since", "Installment_rate_in_percentage_of_disposable_income",
"Personal_status_sex", "Other_debtors_guarantors",
"Residence_since", "Property_type", "Age_in_years",
"Other_installment_plans", "Housing", "Number_of_existing_credits_at_this_bank",
"Job", "Number_of_dependents", "Telephone", "Foreign_worker", "Credit_risk")
# Print the first few rows to check:
head(german_data)
# Explore the data types:
str(german_data)
# Convert Credit_risk to 0 and 1 (0 = bad, 1 = good)
german_data$Credit_risk <- ifelse(german_data$Credit_risk == 2, 0, 1)  # Assuming 2 is bad, 1 is good
# Make sure 'Credit_risk' is binary (0 or 1)
german_data$Credit_risk <- ifelse(german_data$Credit_risk == "Good", 1, 0)
# Build the logistic regression model
logit_model <- glm(Credit_risk ~ ., data = german_data, family = binomial(link = "logit"))
# Display the model summary
summary(logit_model)
# Calculate AIC
aic_value <- AIC(logit_model)
print(aic_value)
# Predict probabilities
predictions <- predict(logit_model, type = "response")
# Load the pROC library for ROC curve
install.packages("pROC")
